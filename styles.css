:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  --light: #ddd;
  --mid: #888;
  --dark: #222;
  --bg:   #030;
  --gap: 0.5em;
  --dim: 0.25;

  --primary: #060;
  --primary-border: #393;
  --primary-active: #030;

  --size: 50px;
  --border: 1px solid white;

  counter-set:
    c1 0
    c2 0
    c3 0
    c4 0
    c5 0
    c6 0
    c7 0
  ;

  color: var(--light);
  background-color: var(--dark);
}

body {
  margin: 0;
  padding: 0;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}


html {
/* BUTTONS / BUTTONS / BUTTONS / BUTTONS / BUTTONS / BUTTONS */

div.buttons {
  display: flex;
  justify-content: space-between;
}

div.buttons button {
  flex: 1
}

div.buttons .primary {
  margin-left: 0.5em;
  flex: 2
}


button,
.button {
  border: 1px outset var(--mid);
  border-radius: var(--gap);
  padding: var(--gap);
}

button:not(:disabled),
.button:not(:disabled) {
  cursor: pointer;
}

button:hover,
.button:hover {
  color: #fff;
}

button:hover:active,
.button:hover:active {
  border-style: inset;
  background-color: #000;
}

button.pressed,
.button.pressed {
  color: #fff;
  border-style: inset;
  background-color: #000;
}

button.primary,
.button.primary {
  background-color: var(--primary);
  border-color: var(--primary-border);
}

button.primary:active:hover,
.button.primary:active:hover {
  background-color: var(--primary-active);
}
}


main {
  position: relative;
  width: 300px;
  height: 150px;
  border: 1px solid #fff;
  border-radius: 8px;
  box-sizing: border-box;
  background-color: var(--bg);
  overflow: hidden;
}


/* AVAILABLE LETTERS */

[class|=level] {
  input {
    position: absolute;
    left: -999vw;
    /* top: -7em; */
  }
  /* &.level-5 input {
    top: -6em;
  }
  &.level-4 input {
    top: -5em;
  }
  &.level-3 input {
    top: -4em;
  }
  &.level-2 input {
    top: -3em;
  }
  &.level-1 input {
    top: -2em;
  } */

  label {
    position: absolute;
    top: 0;
    --size: 32px;
    width: var(--size);
    height: var(--size);
    font-size: var(--size);
    line-height: var(--size);
    text-align: center;
    border: var(--border);
    background-color: var(--bg);
  }

  label.a {
    left: 40px;
  }

  label.i {
    left: 80px;
  }

  label.n {
    left: 120px;
  }

  label.r {
    left: 160px;
  }

  label.s {
    left: 200px;
  }

  label.t {
    left: 240px;
  }
}


/* LETTERS THAT CAN BE CHOSEN */

/* Allow selection only at the current level */
[class|=level]:not(:has(> label :checked)) {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  /* background-color: #0006; */
}

/* Hide a letter that has been selected at all levels */
main:has([id|=a]:checked) .a {
  display: none
}
main:has([id|=i]:checked) .i {
  display: none
}
main:has([id|=n]:checked) .n {
  display: none
}
main:has([id|=r]:checked) .r {
  display: none
}
main:has([id|=s]:checked) .s {
  display: none
}
main:has([id|=t]:checked) .t {
  display: none
}


/* Hide div.level-X if it has a letter checked */
[class|=level]:has(> [id|=undo]:not(:checked)) {
  display: none;
  /* opacity: 0.5;
  pointer-events: none; */
}


/* Undo labels */
[for|=undo] {
  position: absolute;
  bottom: 0;
  left: -99vw;
  display: inline-block;

  width: var(--size);
  height: var(--size);
  background-color: #f006;
}


.level-1 .n,
.level-1 .r,
.level-1 .s,
.level-1 .t { /* invalid */
  pointer-events: none;
  color: var(--mid);
  border-color: var(--mid);
}

/* CHOSEN LETTERS  */
/* .level-1: A or I */
main {
  &:has(.level-1 .a :checked) {  /* A */
    p span:nth-child(4)::after {
      counter-set: c4 1;
      width: var(--size);
      border: var(--border);
    }

    [for=undo-1] {
      left: 124px;
    }

    .level-2 .i,
    .level-2 .r { /* invalid */
      pointer-events: none;
      color: var(--mid);
      border-color: var(--mid);
    }

    &:has(.level-2 .n :checked) { /* AN */
      p span:nth-child(5)::after {
        counter-set: c5 3;
        width: var(--size);
        border: var(--border);
      }

      [for=undo-1] {
        left: -999vw;
      }
      [for=undo-2] {
        left: 149px;
      }

      .level-3 .s { /* invalid */
        pointer-events: none;
        color: var(--mid);
        border-color: var(--mid);
      }

      &:has(.level-3 > label [id]:checked) {
        /* [id] added to increase specificity */
        &:has(.level-3 .i :checked) {
          /* IAN */
          p span:nth-child(3)::after {
            counter-set: c3 2;
            width: var(--size);
            border: var(--border);
          }

          .level-4 .r,
          .level-4 .s,
          .level-4 .t { /* invalid */
            pointer-events: none;
            color: var(--mid);
            border-color: var(--mid);
          }
        }

        &:has(.level-3 .r :checked) { /* RAN .. rain, rains, trains, train, strain, rant, rants */
          p span:nth-child(3)::after {
            counter-set: c3 4;
            width: var(--size);
            border: var(--border);
          }

          .level-4 .s { /* invalid */
            pointer-events: none;
            color: var(--mid);
            border-color: var(--mid);
          }

          &:has(.level-4 .i :checked) { /* RAIN .. rains, trains, train, strain */
            p span {
              &:nth-child(5)::after {
                counter-set: c5 2;
                width: var(--size);
                border: var(--border);
              }
              &:nth-child(6)::after {
                counter-set: c6 3;
                width: var(--size);
                border: var(--border);
              }
            }

            [for=undo-1],
            [for=undo-2],
            [for=undo-3] {
              left: -999vw;
            }
            [for=undo-4] {
              left: 149px;
            }

            &:has(.level-5 .s :checked) { /* RAINS .. trains */
              p span:nth-child(7)::after {
                counter-set: c7 5;
                width: var(--size);
                border: var(--border);
              }

              [for=undo-1],
              [for=undo-2],
              [for=undo-3],
              [for=undo-4] {
                left: -999vw;
              }
              [for=undo-5] {
                left: 224px;
              }

              &:has(.level-6 .t :checked) { /* TRAINS */
                p span:nth-child(1)::after {
                  counter-set: c1 6;
                  width: var(--size);
                  border: var(--border);
                }

                [for=undo-1],
                [for=undo-2],
                [for=undo-3],
                [for=undo-4],
                [for=undo-5] {
                  left: -999vw;
                }
              }
            }

            &:has(.level-5 .t :checked) { /* TRAIN .. strain */
              p span:nth-child(2)::after {
                counter-set: c2 6;
                width: var(--size);
                border: var(--border);
              }

              [for=undo-1],
              [for=undo-2],
              [for=undo-3],
              [for=undo-4] {
                left: -999vw;
              }

              [for=undo-5] {
                left: 24px;
              }

              &:has(.level-6 .s :checked) { /* TRAIN .. strain */
                p span:nth-child(1)::after {
                  counter-set: c1 5;
                  width: var(--size);
                  border: var(--border);
                }

                [for=undo-1],
                [for=undo-2],
                [for=undo-3],
                [for=undo-4],
                [for=undo-5] {
                  left: -999vw;
                }
              }
            }
          }

          &:has(.level-4 .t :checked) { /* RANT .. rants */
            p span:nth-child(6)::after {
              counter-set: c6 6;
              width: var(--size);
              border: var(--border);
            }

            [for=undo-1],
            [for=undo-2],
            [for=undo-3] {
              left: -999vw;
            }
            [for=undo-4] {
              left: 199px;
            }

            .level-5 .i { /* invalid */
              pointer-events: none;
              color: var(--mid);
              border-color: var(--mid);
            }

            &:has(.level-5 .s :checked) { /* RANTS */
              p span:nth-child(7)::after {
                counter-set: c7 5;
                width: var(--size);
                border: var(--border);
              }

              [for=undo-1],
              [for=undo-2],
              [for=undo-3],
              [for=undo-4] {
                left: -999vw;
              }
              [for=undo-5] {
                left: 224px;
              }

              .level-6 .i { /* invalid */
                pointer-events: none;
                color: var(--mid);
                border-color: var(--mid);
              }
            }
          }
        }

        &:has(.level-3 .t :checked) { /* ANT .. rant, rants, ants, rants */
          p span:nth-child(6)::after {
            counter-set: c6 6;
            width: var(--size);
            border: var(--border);
          }

          [for=undo-1],
          [for=undo-2] {
            left: -999vw;
          }
          [for=undo-3] {
            left: 174px;
          }

          .i { /* invalid at all coming levels */
            pointer-events: none;
            color: var(--mid);
            border-color: var(--mid);
          }

          &:has(.level-4 .r :checked) { /* RANT .. rants*/
            p span:nth-child(3)::after {
              counter-set: c3 4;
              width: var(--size);
              border: var(--border);
            }

            [for=undo-1],
            [for=undo-2],
            [for=undo-3] {
              left: -999vw;
            }
            [for=undo-4] {
              left: 49px;
            }

            &:has(.level-5 .s :checked) { /* RANTS */
              p span:nth-child(7)::after {
                counter-set: c7 5;
                width: var(--size);
                border: var(--border);
              }

              [for=undo-1],
              [for=undo-2],
              [for=undo-3],
              [for=undo-4] {
                left: -999vw;
              }
              [for=undo-5] {
                left: 224px;
              }
            }
          }

          &:has(.level-4 .s :checked) { /* ANTS .. rants*/
            p span:nth-child(7)::after {
              counter-set: c7 5;
              width: var(--size);
              border: var(--border);
            }

            [for=undo-1],
            [for=undo-2],
            [for=undo-3] {
              left: -999vw;
            }
            [for=undo-4] {
              left: 199px;
            }

            &:has(.level-5 .r :checked) { /* RANTS */
              p span:nth-child(2)::after {
                counter-set: c2 4;
                width: var(--size);
                border: var(--border);
              }

              [for=undo-1],
              [for=undo-2],
              [for=undo-3],
              [for=undo-4] {
                left: -999vw;
              }
              [for=undo-5] {
                left: 24px;
              }

              .level-6 .i {
                /* not RANTS + I */
                pointer-events: none;
                opacity: var(--dim);
              }
            }
          }
        }

        [for=undo-1],
        [for=undo-2] {
          left: -999vw;
        }

        [for=undo-3] {
          left: 74px;
        }
      }
    }

    &:has(.level-2 .s :checked) { /* AS */
      p span:nth-child(5)::after {
        counter-set: c5 5;
        width: var(--size);
        border: var(--border);
      }

      [for=undo-1] {
        left: -999vw;
      }
      [for=undo-2] {
        left: 149px;
      }

      .level-3 .i,
      .level-3 .n,
      .level-3 .r,
      .level-3 .t { /* invalid */
        pointer-events: none;
        color: var(--mid);
        border-color: var(--mid);
      }
    }

    &:has(.level-2 .t :checked) { /* AT .. ant, anti, rant, rants, ants, rants */
      p span:nth-child(5)::after {
        counter-set: c5 6;
        width: var(--size);
        border: var(--border);
      }

      [for=undo-1] {
        left: -999vw;
      }
      [for=undo-2] {
        left: 149px;
      }

      .level-3 .i { /* invalid */
        pointer-events: none;
        color: var(--mid);
        border-color: var(--mid);
      }

      &:has(.level-3 > label [id]:checked) {
        &:has(.level-3 .n :checked) { /* ANT .. anti, rant, rants, ants, rants */
          p span {
            &:nth-child(5)::after {
              counter-set: c5 3;
              width: var(--size);
              border: var(--border);
            }
            &:nth-child(6)::after {
              counter-set: c6 6;
              width: var(--size);
              border: var(--border);
            }
          }

          [for=undo-1],
          [for=undo-2] {
            left: -999vw;
          }
          [for=undo-3] {
            left: 124px;
          }

          &:has(.level-4 .i :checked) { /* ANTI */
            p span:nth-child(7)::after {
              counter-set: c7 2;
              width: var(--size);
              border: var(--border);
            }

            [for=undo-1],
            [for=undo-2],
            [for=undo-3] {
              left: -999vw;
            }
            [for=undo-4] {
              left: 199px;
            }

            .level-5 .r,
            .level-5 .s { /* invalid */
              pointer-events: none;
              color: var(--mid);
              border-color: var(--mid);
            }
          }

          &:has(.level-4 .r :checked) { /* RANT .. rants*/
            p span:nth-child(3)::after {
              counter-set: c3 4;
              width: var(--size);
              border: var(--border);
            }

            [for=undo-1],
            [for=undo-2],
            [for=undo-3] {
              left: -999vw;
            }
            [for=undo-4] {
              left: 49px;
            }

            .i { /* invalid for all coming levels*/
              pointer-events: none;
              color: var(--mid);
              border-color: var(--mid);
            }

            &:has(.level-5 .s :checked) { /* RANTS */
              p span:nth-child(7)::after {
                counter-set: c7 5;
                width: var(--size);
                border: var(--border);
              }

              [for=undo-1],
              [for=undo-2],
              [for=undo-3],
              [for=undo-4] {
                left: -999vw;
              }
              [for=undo-5] {
                left: 224px;
              }
            }
          }

          &:has(.level-4 .s :checked) { /* ANTS .. rants*/
            p span:nth-child(7)::after {
              counter-set: c7 5;
              width: var(--size);
              border: var(--border);
            }

            [for=undo-1],
            [for=undo-2],
            [for=undo-3] {
              left: -999vw;
            }
            [for=undo-4] {
              left: 199px;
            }

            .i { /* invalid for all coming levels*/
              pointer-events: none;
              color: var(--mid);
              border-color: var(--mid);
            }

            &:has(.level-5 .r :checked) { /* RANTS */
              p span:nth-child(2)::after {
                counter-set: c2 4;
                width: var(--size);
                border: var(--border);
              }

              [for=undo-1],
              [for=undo-2],
              [for=undo-3],
              [for=undo-4] {
                left: -999vw;
              }
              [for=undo-5] {
                left: 24px;
              }
            }
          }
        }

        [for=undo-1],
        [for=undo-2] {
          left: -999vw;
        }

        [for=undo-3] {
          left: 74px;
        }
        &:has(.level-3 .r :checked) { /* RAT .. rant, rants, rats, rants */
          p span:nth-child(3)::after {
            counter-set: c3 4;
            width: var(--size);
            border: var(--border);
          }

          [for=undo-1],
          [for=undo-2] {
            left: -999vw;
          }
          [for=undo-3] {
            left: 74px;
          }

          .i { /* invalid for all coming levels */
            pointer-events: none;
            color: var(--mid);
            border-color: var(--mid);
          }

          &:has(.level-4 .n :checked) { /* RANT .. rants */
            p span {
              &:nth-child(5)::after {
                counter-set: c5 3;
                width: var(--size);
                border: var(--border);
              }
              &:nth-child(6)::after {
                counter-set: c6 6;
                width: var(--size);
                border: var(--border);
              }
            }

            [for=undo-1],
            [for=undo-2],
            [for=undo-3] {
              left: -999vw;
            }
            [for=undo-4] {
              left: 149px;
            }

            &:has(.level-5 .s :checked) { /* RANTS */
              p span:nth-child(7)::after {
                counter-set: c7 5;
                width: var(--size);
                border: var(--border);
              }

              [for=undo-1],
              [for=undo-2],
              [for=undo-3],
              [for=undo-4] {
                left: -999vw;
              }
              [for=undo-5] {
                left: 224px;
              }
            }
          }

          &:has(.level-4 .s :checked) { /* RATS .. rants */
            p span:nth-child(6)::after {
              counter-set: c6 5;
              width: var(--size);
              border: var(--border);
            }

            [for=undo-1],
            [for=undo-2],
            [for=undo-3] {
              left: -999vw;
            }
            [for=undo-4] {
              left: 199px;
            }

            .i { /* invalid for all coming levels */
              pointer-events: none;
              color: var(--mid);
              border-color: var(--mid);
            }

            &:has(.level-5 .n :checked) { /* RANTS */
              p span {
                :nth-child(5)::after {
                  counter-set: c5 3;
                  width: var(--size);
                  border: var(--border);
                }
                &:nth-child(6)::after {
                  counter-set: c6 6;
                  width: var(--size);
                  border: var(--border);
                }
                &:nth-child(7)::after {
                  counter-set: c7 5;
                  width: var(--size);
                  border: var(--border);
                }
              }

              [for|=undo] {
                left: -999vw;
              }
              [for=undo-5] {
                left: 124px;
              }

              .i { /* invalid for all coming levels */
                pointer-events: none;
                color: var(--mid);
                border-color: var(--mid);
              }
            }
          }
        }

        &:has(.level-3 .s :checked) { /* SAT */
          p span:nth-child(3)::after {
            counter-set: c3 5;
            width: var(--size);
            border: var(--border);
          }

          .level-4 .i,
          .level-4 .n,
          .level-4 .r { /* invalid */
            pointer-events: none;
            color: var(--mid);
            border-color: var(--mid);
          }
        }

        [for=undo-1],
        [for=undo-2] {
          left: -999vw;
        }
        [for=undo-3] {
          left: 74px;
        }
      }
    }
  }

  &:has(.level-1 .i :checked) { /* I .. in, sin, tin, tins */
    p span:nth-child(5)::after {
      counter-set: c5 2;
      width: var(--size);
      border: var(--border);
    }

    [for=undo-1] {
      left: 124px;
    }

    .a,
    .r { /* invalid for all coming levels */
      pointer-events: none;
      color: var(--mid);
      border-color: var(--mid);
    }

    &:has(.level-2 .n :checked) { /* IN .. sin, tin, tins */
      p span:nth-child(6)::after {
        counter-set: c6 3;
        width: var(--size);
        border: var(--border);
      }

      [for=undo-1] {
        left: -999vw;
      }
      [for=undo-2] {
        left: 149px;
      }

      &:has(.level-3 > label [id]:checked) {
        /* [id] added to increase specificity */
        &:has(.level-3 .t :checked) { /* TIN .. tins */
          p span:nth-child(4)::after {
            counter-set: c4 6;
            width: var(--size);
            border: var(--border);
          }

          &:has(.level-4 .s :checked) { /* TINS */
            p span:nth-child(7)::after {
              counter-set: c7 5;
              width: var(--size);
              border: var(--border);
            }

            [for=undo-1],
            [for=undo-2],
            [for=undo-3] {
              left: -999vw;
            }
            [for=undo-4] {
              left: 199px;
            }
          }
        }

        &:has(.level-3 .s :checked) { /* SIN */
          p span:nth-child(4)::after {
            counter-set: c4 5;
            width: var(--size);
            border: var(--border);
          }

          .t { /* invalid for all coming levels */
            pointer-events: none;
            color: var(--mid);
            border-color: var(--mid);
          }
        }

        [for=undo-1],
        [for=undo-2] {
          left: -999vw;
        }

        [for=undo-3] {
          left: 74px;
        }
      }
    }

    &:has(.level-2 .s :checked) { /* IS */
      p span:nth-child(6)::after {
        counter-set: c6 5;
        width: var(--size);
        border: var(--border);
      }

      [for=undo-1] {
        left: -999vw;
      }
      [for=undo-2] {
        left: 149px;
      }

      .n,
      .t { /* invalid for all levels */
        pointer-events: none;
        color: var(--mid);
        border-color: var(--mid);
      }
    }

    &:has(.level-2 .t :checked) {
      /* IT */
      p span:nth-child(6)::after {
        counter-set: c6 6;
        width: var(--size);
        border: var(--border);
      }

      [for=undo-1] {
        left: -999vw;
      }
      [for=undo-2] {
        left: 149px;
      }

      &:has(.level-3 > label [id]:checked) {
        /* [id] added to increase specificity */
        &:has(.level-3 .n :checked) { /* NIT .. nits */
          p span:nth-child(4)::after {
            counter-set: c4 3;
            width: var(--size);
            border: var(--border);
          }

          &:has(.level-4 .s :checked) {
            /* NITS */
            p span:nth-child(7)::after {
              counter-set: c7 5;
              width: var(--size);
              border: var(--border);
            }

            [for=undo-1],
            [for=undo-2],
            [for=undo-3] {
              left: -999vw;
            }
            [for=undo-4] {
              left: 199px;
            }
          }
        }
        &:has(.level-3 .s :checked) { /* SIT */
          p span:nth-child(4)::after {
            counter-set: c4 5;
            width: var(--size);
            border: var(--border);
          }

          .n { /* invalid for all levels */
            pointer-events: none;
            color: var(--mid);
            border-color: var(--mid);
          }
        }

        [for=undo-1],
        [for=undo-2] {
          left: -999vw;
        }

        [for=undo-3] {
          left: 74px;
        }
      }
    }
  }
}

p#word {
  position: absolute;
  width: 100%;
  margin: 0;
  bottom: 0;

  display: flex;
  justify-content: center;

  font-size: var(--size);
  border-top: var(--border);
}

p span {
  height: var(--size);
  text-align: center;
  line-height: var(--size);
}

p span::after {
  display: inline-block;
  width: var(--size);
  height: var(--size);

  border: var(--border);
  box-sizing: border-box;
}

@counter-style letters {
  system: cyclic;
  symbols: "A" "I" "N" "R" "S" "T" "";
}

p span {
  &::after {
    width: 0;
    border: none;
  }

  &:nth-child(1)::after {
    content: counter(c1, letters);
  }

  &:nth-child(2)::after {
    content: counter(c2, letters);
  }

  &:nth-child(3)::after {
    content: counter(c3, letters);
  }

  &:nth-child(4)::after {
    content: counter(c4, letters);
  }

  &:nth-child(5)::after {
    content: counter(c5, letters);
  }

  &:nth-child(6)::after {
    content: counter(c6, letters);
  }

  &:nth-child(7)::after {
    content: counter(c7, letters);
  }
}